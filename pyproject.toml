[project]
name = "alteryx_open_src_update_checker"
readme = "README.md"
description = "an update checker for alteryx open source libraries"
dynamic = ["version"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
]
authors = [
    {name="Alteryx, Inc.", email="open_source_support@alteryx.com"}
]
maintainers = [
    {name="Alteryx, Inc.", email="open_source_support@alteryx.com"}
]
keywords = ["data science", "machine learning"]
license = {text = "BSD 3-clause"}
requires-python = ">=3.8,<4"
dependencies = [
    "requests>=2.22.0",
]

[project.urls]
"Source Code"= "https://github.com/alteryx/alteryx-open-src-update-checker/"
"Issue Tracker" = "https://github.com/alteryx/alteryx-open-src-update-checker/issues"
"Twitter" = "https://twitter.com/alteryxoss"
"Chat" = "https://join.slack.com/t/alteryx-oss/shared_invite/zt-182tyvuxv-NzIn6eiCEf8TBziuKp0bNA"

[project.optional-dependencies]
dev = [
codecov==2.0.16
flake8==3.7.0
autopep8==1.4.3
isort==4.3.4
]
spark = [
    "woodwork[spark] >= 0.18.0",
    "pyspark >= 3.2.2",
    "numpy < 1.24.0",
]
updater = [
    "alteryx-open-src-update-checker >= 2.1.0"
]
tsfresh = [
    "featuretools-tsfresh-primitives >= 1.0.0",
]
nlp = [
    "nlp-primitives[complete] >= 2.0.0",
]
autonormalize = [
    "autonormalize >= 2.0.1",
]
sql = [
    "featuretools_sql >= 0.0.1",
]
sklearn = [
    "featuretools-sklearn-transformer >= 1.0.0",
]
docs = [
    "ipython == 8.4.0",
    "jupyter == 1.0.0",
    "matplotlib == 3.5.2",
    "Sphinx == 5.1.1",
    "nbsphinx == 0.8.9",
    "nbconvert == 6.5.0",
    "pydata-sphinx-theme == 0.9.0",
    "sphinx-inline-tabs == 2022.1.2b11",
    "sphinx-copybutton == 0.5.0",
    "myst-parser == 0.18.0",
    "nlp_primitives >= 2.3.0",
    "autonormalize >= 2.0.1",
    "click >=7.0.0",
    "featuretools[sklearn, spark, test]",
]
dev = [
    "flake8 == 5.0.4",
    "isort == 5.10.1",
    "black[jupyter] == 22.6.0",
    "pre-commit == 2.20.0",
    "featuretools[docs, spark, test]",
]
complete = [
    "featuretools[autonormalize, nlp, sklearn, spark, sql, tsfresh, updater]",
]

[tool.setuptools]
include-package-data = true
license-files = [
    "LICENSE",
    "featuretools/primitives/data/free_email_provider_domains_license"
]

[tool.setuptools.packages.find]
namespaces = true

[tool.setuptools.package-data]
"*" = [
    "*.txt",
    "README.md",
]

[tool.setuptools.exclude-package-data]
"*" = [
    "* __pycache__",
    "*.py[co]",
]

[tool.setuptools.dynamic]
version = {attr = "featuretools.version.__version__"}

[tool.pytest.ini_options]
addopts = "--doctest-modules"
testpaths = [
    "alteryx_open_src_update_checker/tests/*"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.isort]
profile = "black"
forced_separate = "alteryx_open_src_update_checker"
known_first_party = "alteryx_open_src_update_checker"
skip = "__init__.py"
filter_files = true
multi_line_output = 3

[tool.black]
target-version = ['py311']

[tool.coverage.run]
source = ["alteryx_open_src_update_checker"]

[tool.coverage.report]
exclude_lines =[
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if self._verbose:",
    "if verbose:",
    "if profile:",
    "pytest.skip"
]
